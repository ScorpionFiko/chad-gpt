{"version":3,"sources":["utils/helpers.js","utils/actions.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","utils/reducers.js","utils/store.js","components/About/index.js","components/Banner/index.js","components/Login/index.js","components/Signup/index.js","pages/MainLanding.js","pages/Dashboard.js","components/Questions/index.js","pages/BuildWorkout.js","components/Footer/index.js","App.js","serviceWorker.js","index.js","assets/spinner.gif","assets/spinner-small.gif"],"names":["idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ProductItem","item","dispatch","useDispatch","image","name","price","quantity","cart","useSelector","state","React","createElement","className","Link","to","concat","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","_objectSpread","product","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useSelector","currentCategory","products","_useQuery","useQuery","loading","data","useEffect","forEach","then","length","filter","category","map","key","spinner","CategoryMenu","categories","categoryData","id","CartItem","_ref","placeholder","value","onChange","target","role","aria-label","removeFromCart","AuthService","_classCallCheck","_createClass","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","record","__await","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","stripePromise","loadStripe","Cart","cartOpen","_useLazyQuery","useLazyQuery","_useLazyQuery2","_slicedToArray","getCheckout","_useState","useState","_useState2","isLoading","setIsLoading","loader","Spinner","productIds","variables","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_callee","_context","_toConsumableArray","apply","arguments","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","Home","Detail","useParams","currentProduct","setCurrentProduct","indexedProducts","Fragment","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","reducer","action","newState","composedEnhancers","composeWithDevTools","createStore","About","Banner","MainLanding","Dashboard","openai","OpenAIApi","Configuration","apiKey","process","API_KEY","ExerciseRoutineGenerator","age","weight","gender","exerciseFrequency","equipment","fitnessGoal","fitnessInfo","setFitnessInfo","_useState3","_useState4","exerciseRoutine","setExerciseRoutine","handleFitnessInfoChange","handleSubmit","aiPrompt","createChatCompletion","model","messages","content","max_tokens","choices","message","JSON","parse","text","stringify","BuildWorkout","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Provider","Router","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module"],"mappings":"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","file":"static/js/main.5f9248b8.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction ProductItem(item) {\n\n  const dispatch = useDispatch();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const cart = useSelector(state=>state.cart)\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ProductList() {\n  \n  const dispatch = useDispatch();\n  const { currentCategory, products } = useSelector(state=>state);\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return products;\n    }\n\n    return products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nexport default function CategoryMenu() {\n  const dispatch = useDispatch();\n  const categories = useSelector(state=>state.categories);\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState, useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Spinner from '../../assets/spinner-small.gif'\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const {cart, cartOpen} = useSelector(state=>state);\n  const dispatch = useDispatch();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  const [isLoading, setIsLoading] = useState(false);\n  const loader = isLoading ? <img src={Spinner} alt='spinner' className='spinner' /> : <button onClick={submitCheckout}>Checkout</button> \n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!cart.length) {\n      getCart();\n    }\n  }, [cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    setIsLoading(true);\n    const productIds = [];\n\n    cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {cart.length ? (\n        <div>\n          {cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? ( loader\n              ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Detail() {\n\n  const dispatch = useDispatch();\n  \n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = useSelector(state=>state);\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              My Workouts{/* This will generate workoutcard components */}\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n             Build a Workout{/* This will link to buildworkout page */}\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","import {createStore} from 'redux'\nimport {reducer} from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst composedEnhancers = composeWithDevTools();\n\n\nlet preloadedState = {\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',};\n\n  const store = createStore(reducer, preloadedState, composedEnhancers);\n\n  export default store;","import React from \"react\";\nimport \"./style.css\";\n\nfunction About() {\n  return (\n    <div>\n      <p>Welcome to Chad GPT, your at home virtual personal trainer. </p>\n      <br />\n      <p>\n        Our mission is to provide personalized workout routines curated for your\n        needs and life. Not everyone has the time or money to spend on a fitness\n        coach, but the benefits are undeniable. This application is designed to\n        mitigate both of these issues. It also provides ultimate freedom to\n        tailor your desired routine to your goals and avilable resources.\n      </p>\n      <br />\n      <p>Here's to your new you!</p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\nfunction Banner() {\n    return (\n        <div>\n            <img src=\"../../assets/spinner.gif\" />\n            <p>This will be our main banner, image or logo</p>\n        </div>\n    )\n}\n\nexport default Banner;","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nfunction Login(props) {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [login, { error }] = useMutation(LOGIN);\n  \n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        const mutationResponse = await login({\n          variables: { email: formState.email, password: formState.password },\n        });\n        const token = mutationResponse.data.login.token;\n        Auth.login(token);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  \n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setFormState({\n        ...formState,\n        [name]: value,\n      });\n    };\n  \n    return (\n      <div className=\"container my-1\">\n        <Link to=\"/signup\">← Go to Signup</Link>\n  \n        <h2>Login</h2>\n        <form onSubmit={handleFormSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email address:</label>\n            <input\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          {error ? (\n            <div>\n              <p className=\"error-text\">The provided credentials are incorrect</p>\n            </div>\n          ) : null}\n          <div className=\"flex-row flex-end\">\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n  \n  export default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../../utils/auth';\nimport { ADD_USER } from '../../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport About from '../components/About';\nimport Banner from '../components/Banner';\nimport Login from '../components/Login';\nimport Signup from '../components/Signup';\n\n\nfunction MainLanding() {\n    return (\n        <div>\n            <Banner />\n            <About />\n            <div>\n            <Login />\n            <Signup />\n            </div>\n        </div>\n    )\n}\n\nexport default MainLanding;","import React from 'react';\nimport Nav from '../components/Nav';\n\nconst Dashboard = () => {\n    return (\n        <div>\n            <Nav />\n\n        </div>\n    )\n}\n\nexport default Dashboard;","import React from \"react\";\n\nimport { useState } from \"react\";\nimport { OpenAIApi, Configuration } from \"openai\";\n\nconst openai = new OpenAIApi(\n  new Configuration({\n    apiKey: process.env.API_KEY,\n  })\n);\n\n// State to hold user input\nfunction ExerciseRoutineGenerator() { \n  const [fitnessInfo, setFitnessInfo] = useState({\n    age: \"\",\n    height: \"\",\n    weight: \"\",\n    gender: \"\",\n    exerciseFrequency: \"\",\n    equipment: \"\",\n    fitnessGoal: \"\",\n  });\n\n  // State to hold the exercise routine\n  const [exerciseRoutine, setExerciseRoutine] = useState([]);\n\n   // function to handle the change in the input fields\n  const handleFitnessInfoChange = (event) => {\n    setFitnessInfo({ ...fitnessInfo, [event.target.name]: event.target.value }); \n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const {\n      age,\n      height,\n      weight,\n      gender,\n      exerciseFrequency,\n      equipment,\n      fitnessGoal,\n    } = fitnessInfo;\n\n    const aiPrompt = `\n      ${age} years of age, ${height} in height, ${weight}lbs, ${gender}, able to exercise ${exerciseFrequency} times per week, access to ${equipment}, end goal is ${fitnessGoal} and 1 month to achieve goal\n\n      build exercise routine given this prompt. respond ONLY in JSON. Do not include any notes. Use this as schema:\n\n      {\n        \"exerciseRoutine\": [\n          {\n            \"day\": \"Monday\",\n            \"exercises\": [\n              {\n                \"exerciseName\": \"\",\n                \"exerciseType\": \"\",\n                \"sets\": \"\",\n                \"reps\": \"\",\n                \"secondsRest\": \"\",\n                \"minutesDuration\": \"\",\n                \"intensity\": \"\",\n              },\n            ],\n          },\n        ],\n      }\n    `;\n\n    const res = await openai.createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: [{ role: \"user\", content: aiPrompt }],\n        max_tokens: 200,\n    });\n    console.log(res.data.choices[0].message.content);\n\n    setExerciseRoutine(JSON.parse(res.data.choices[0].text)); \n  };\n\n  return {\n    ExerciseRoutineGenerator: (\n      <div>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Age:\n            <input\n              type=\"number\"\n              name=\"age\"\n              value={fitnessInfo.age}\n              onChange={handleFitnessInfoChange}\n            />\n          </label>\n          <label>\n            Height (feet and inches):\n            <input\n              type=\"text\"\n              name=\"height\"\n              value={fitnessInfo.height}\n              onChange={handleFitnessInfoChange}\n            />\n          </label>\n          <label>\n            Weight (pounds):\n            <input\n              type=\"number\"\n              name=\"weight\"\n              value={fitnessInfo.weight}\n              onChange={handleFitnessInfoChange}\n            />\n          </label>\n          <label>\n            Gender:\n            <select\n              name=\"gender\"\n              value={fitnessInfo.gender}\n              onChange={handleFitnessInfoChange}\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </label>\n          <label>\n            Exercise frequency (days per week):\n            <input\n              type=\"number\"\n              name=\"exerciseFrequency\"\n              value={fitnessInfo.exerciseFrequency}\n              onChange={handleFitnessInfoChange}\n            />\n          </label>\n          <label>\n            Equipment:\n            <select\n              name=\"equipment\"\n              value={fitnessInfo.equipment}\n              onChange={handleFitnessInfoChange}\n            >\n              <option value=\"Loose weights\">Loose weights</option>\n              <option value=\"Bicycle\">Bicycle</option>\n              <option value=\"Resistance bands\">Resistance bands</option>\n              <option value=\"Bodyweight\">Bodyweight</option>\n              <option value=\"A full gym\">A full gym</option>\n            </select>\n          </label>\n          <label>\n            Fitness goal:\n            <select\n              name=\"fitnessGoal\"\n              value={fitnessInfo.fitnessGoal}\n              onChange={handleFitnessInfoChange}\n            >\n              <option value=\"Lose weight\">Lose weight</option>\n              <option value=\"Build muscle\">Build muscle</option>\n              <option value=\"Improve cardiovascular health\">\n                Improve cardiovascular health\n              </option>\n              <option value=\"Increase flexibility\">Increase flexibility</option>\n              <option value=\"Run a marathon\">Run a marathon</option>\n            </select>\n          </label>\n          <button type=\"submit\">Generate Exercise Routine</button>\n        </form>\n{/* this will render the exercise routine in json format. null will remove the quotes around the keys and 2 will add 2 spaces to the indentation */}\n        <pre>{JSON.stringify(exerciseRoutine, null, 2)}</pre> \n      </div>\n\n    ),\n  };\n}\n\nexport default ExerciseRoutineGenerator;\n","import React from \"react\";\nimport Nav from \"../components/Nav\";\nimport ExerciseRoutineGenerator from \"../components/Questions/index\";\n\nconst BuildWorkout = () => {\n  return (\n    <div>\n      <Nav />\n      {/* This will render the questions components sequentially and conditionally, followed by an event handler to link back to the workout card */}\n      <ExerciseRoutineGenerator />\n    </div>\n  );\n};\n\nexport default BuildWorkout;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <div>\n            <p>This is the footer section</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\n// import { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\nimport MainLanding from './pages/MainLanding';\nimport Dashboard from './pages/Dashboard';\nimport BuildWorkout from './pages/BuildWorkout';\nimport Footer from './components/Footer';\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <Router>\n          <div>\n            {/*<Nav />*/}\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path='/mainLanding' component={MainLanding} /> {/* This will eventually be our default route */}\n              <Route exact path='/dashboard' component={Dashboard} /> {/* This will be contain navbar, accessed upon login */}\n              <Route exact path='/buildWorkout' component={BuildWorkout} /> {/* This will be accessed through nav in dashboard */}\n              <Route component={NoMatch} />\n            </Switch>\n            <Footer />\n\n          </div>\n        </Router>\n      </Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","module.exports = __webpack_public_path__ + \"static/media/spinner-small.6a4e8ffd.gif\";"],"sourceRoot":""}